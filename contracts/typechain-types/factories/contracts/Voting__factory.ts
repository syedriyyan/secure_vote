/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Voting, VotingInterface } from "../../contracts/Voting";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
    ],
    name: "ElectionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "electionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "candidateId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "VoteCasted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "addCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "createElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "electionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "elections",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "candidateCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
    ],
    name: "endElection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
    ],
    name: "getCandidate",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_candidateId",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c03806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637ad36e841161005b5780637ad36e84146100e8578063997d2830146100fb5780639c98bcbb14610112578063b384abef1461012557600080fd5b80631750a3d0146100825780634bd46448146100975780635e6fef01146100c1575b600080fd5b610095610090366004610880565b610138565b005b6100aa6100a53660046108c7565b61026b565b6040516100b892919061092f565b60405180910390f35b6100d46100cf366004610951565b610330565b6040516100b898979695949392919061096a565b6100956100f63660046109cd565b610490565b61010460015481565b6040519081526020016100b8565b610095610120366004610951565b610588565b6100956101333660046108c7565b610600565b600082815260208190526040902060050154829061010090046001600160a01b031633146101995760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b60448201526064015b60405180910390fd5b826000811180156101ac57506001548111155b6101eb5760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21032b632b1ba34b7b760811b6044820152606401610190565b6000848152602081905260408120600781018054919261020a83610a41565b9091555050604080516060810182526007830154808252602080830188815260008486018190529283526006860190915292902081518155915190919060018201906102569082610af3565b50604082015181600201559050505050505050565b60008281526020818152604080832084845260068101909252822060028101546001820180546060959493929082906102a390610a68565b80601f01602080910402602001604051908101604052809291908181526020018280546102cf90610a68565b801561031c5780601f106102f15761010080835404028352916020019161031c565b820191906000526020600020905b8154815290600101906020018083116102ff57829003601f168201915b505050505091509350935050509250929050565b6000602081905290815260409020805460018201805491929161035290610a68565b80601f016020809104026020016040519081016040528092919081815260200182805461037e90610a68565b80156103cb5780601f106103a0576101008083540402835291602001916103cb565b820191906000526020600020905b8154815290600101906020018083116103ae57829003601f168201915b5050505050908060020180546103e090610a68565b80601f016020809104026020016040519081016040528092919081815260200182805461040c90610a68565b80156104595780601f1061042e57610100808354040283529160200191610459565b820191906000526020600020905b81548152906001019060200180831161043c57829003601f168201915b505050506003830154600484015460058501546007909501549394919390925060ff82169161010090046001600160a01b03169088565b8082106104d45760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642074696d652072616e676560701b6044820152606401610190565b600180549060006104e483610a41565b909155505060018054600081815260208190526040902090815590810161050b8682610af3565b506002810161051a8582610af3565b50600381018390556004810182905560058101805460016001600160a81b03199091166101003302178117909155546040517f52be7c4e77b4de76b7607d621492061fe13b58597e72dfb5e51ab8f6187ed14190610579908890610bb3565b60405180910390a25050505050565b600081815260208190526040902060050154819061010090046001600160a01b031633146105e45760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b6044820152606401610190565b506000908152602081905260409020600501805460ff19169055565b8160008111801561061357506001548111155b6106525760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21032b632b1ba34b7b760811b6044820152606401610190565b600083815260208190526040902060038101544210801590610678575080600401544211155b6106b85760405162461bcd60e51b8152602060048201526011602482015270566f74696e67206e6f742061637469766560781b6044820152606401610190565b33600090815260088201602052604090205460ff161561070a5760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606401610190565b60008311801561071e575080600701548311155b61075e5760405162461bcd60e51b8152602060048201526011602482015270496e76616c69642063616e64696461746560781b6044820152606401610190565b3360009081526008820160209081526040808320805460ff1916600117905585835260068401909152812060020180549161079883610a41565b90915550506040805184815233602082015285917ffe9b9fe32c3fe66775687ffbbb055de4489a6f99a6d31665430849156e8d7435910160405180910390a250505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261080457600080fd5b813567ffffffffffffffff8082111561081f5761081f6107dd565b604051601f8301601f19908116603f01168101908282118183101715610847576108476107dd565b8160405283815286602085880101111561086057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561089357600080fd5b82359150602083013567ffffffffffffffff8111156108b157600080fd5b6108bd858286016107f3565b9150509250929050565b600080604083850312156108da57600080fd5b50508035926020909101359150565b6000815180845260005b8181101561090f576020818501810151868301820152016108f3565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061094260408301856108e9565b90508260208301529392505050565b60006020828403121561096357600080fd5b5035919050565b60006101008a83528060208401526109848184018b6108e9565b90508281036040840152610998818a6108e9565b60608401989098525050608081019490945291151560a08401526001600160a01b031660c083015260e0909101529392505050565b600080600080608085870312156109e357600080fd5b843567ffffffffffffffff808211156109fb57600080fd5b610a07888389016107f3565b95506020870135915080821115610a1d57600080fd5b50610a2a878288016107f3565b949794965050505060408301359260600135919050565b600060018201610a6157634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610a7c57607f821691505b602082108103610a9c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610aee576000816000526020600020601f850160051c81016020861015610acb5750805b601f850160051c820191505b81811015610aea57828155600101610ad7565b5050505b505050565b815167ffffffffffffffff811115610b0d57610b0d6107dd565b610b2181610b1b8454610a68565b84610aa2565b602080601f831160018114610b565760008415610b3e5750858301515b600019600386901b1c1916600185901b178555610aea565b600085815260208120601f198616915b82811015610b8557888601518255948401946001909101908401610b66565b5085821015610ba35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000610bc660208301846108e9565b939250505056fea2646970667358221220e875f1b7a07040378220d6ea5388f4124dcb5c159122ec8086b98a7b7803459364736f6c63430008180033";

type VotingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Voting__factory extends ContractFactory {
  constructor(...args: VotingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Voting & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Voting__factory {
    return super.connect(runner) as Voting__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingInterface {
    return new Interface(_abi) as VotingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Voting {
    return new Contract(address, _abi, runner) as unknown as Voting;
  }
}
