/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Ballot,
  BallotInterface,
} from "../../../contracts/Ballot.sol/Ballot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_electionId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_electionName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "BallotEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "CandidateAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "candidateId",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addCandidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "candidateCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "electionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "electionName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endBallot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ended",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCandidates",
    outputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "names",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "votes",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWinners",
    outputs: [
      {
        internalType: "uint256[]",
        name: "winnerIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "winningVoteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "hasAddressVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IVoterRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "candidateId",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200123b3803806200123b833981016040819052620000349162000147565b60016000556001600160a01b038516620000955760405162461bcd60e51b815260206004820152601860248201527f42616c6c6f743a20696e76616c6964207265676973747279000000000000000060448201526064015b60405180910390fd5b808210620000e65760405162461bcd60e51b815260206004820152601560248201527f42616c6c6f743a20696e76616c69642074696d6573000000000000000000000060448201526064016200008c565b600180546001600160a01b0319166001600160a01b03871617905560028490556003620001148482620002ea565b5060049190915560055550506006805460ff1916905550620003b6565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a086880312156200016057600080fd5b85516001600160a01b03811681146200017857600080fd5b60208781015160408901519297509550906001600160401b03808211156200019f57600080fd5b818901915089601f830112620001b457600080fd5b815181811115620001c957620001c962000131565b604051601f8201601f19908116603f01168101908382118183101715620001f457620001f462000131565b816040528281528c868487010111156200020d57600080fd5b600093505b8284101562000231578484018601518185018701529285019262000212565b6000928101909501919091525050506060870151608090970151959894975095949392505050565b600181811c908216806200026e57607f821691505b6020821081036200028f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002e5576000816000526020600020601f850160051c81016020861015620002c05750805b601f850160051c820191505b81811015620002e157828155600101620002cc565b5050505b505050565b81516001600160401b0381111562000306576200030662000131565b6200031e8162000317845462000259565b8462000295565b602080601f8311600181146200035657600084156200033d5750858301515b600019600386901b1c1916600185901b178555620002e1565b600085815260208120601f198616915b82811015620003875788860151825594840194600190910190840162000366565b5085821015620003a65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610e7580620003c66000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063462e91ec1161008c57806385e8e7a71161006657806385e8e7a7146101b5578063a9a981a3146101ca578063df15c37e146101d3578063e3e6ca7d146101e957600080fd5b8063462e91ec1461016e57806378e97925146101815780637b1039991461018a57600080fd5b80630d15fd77116100c85780630d15fd771461013757806312fa6feb146101405780633197cbb61461015d5780633a47cb601461016657600080fd5b80630121b93f146100ef578063051364d41461010457806306a49fce14610120575b600080fd5b6101026100fd366004610a28565b610215565b005b61010d60025481565b6040519081526020015b60405180910390f35b6101286104bf565b60405161011793929190610ac3565b61010d60085481565b60065461014d9060ff1681565b6040519015158152602001610117565b61010d60055481565b6101026106ce565b61010261017c366004610b5e565b610706565b61010d60045481565b60015461019d906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b6101bd6107a9565b6040516101179190610c0f565b61010d60075481565b6101db610837565b604051610117929190610c29565b61014d6101f7366004610c4b565b6001600160a01b03166000908152600a602052604090205460ff1690565b61021d6109cf565b60065460ff16156102655760405162461bcd60e51b815260206004820152600d60248201526c10985b1b1bdd0e88195b991959609a1b60448201526064015b60405180910390fd5b600454421015801561027957506005544211155b6102ba5760405162461bcd60e51b815260206004820152601260248201527142616c6c6f743a206e6f742061637469766560701b604482015260640161025c565b6000811180156102cc57506007548111155b6103185760405162461bcd60e51b815260206004820152601960248201527f42616c6c6f743a20696e76616c69642063616e64696461746500000000000000604482015260640161025c565b336000908152600a602052604090205460ff16156103705760405162461bcd60e51b815260206004820152601560248201527410985b1b1bdd0e88185b1c9958591e481d9bdd1959605a1b604482015260640161025c565b60015460405163c3c5a54760e01b81523360048201526001600160a01b039091169063c3c5a54790602401602060405180830381865afa1580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190610c74565b6104285760405162461bcd60e51b815260206004820152601c60248201527f42616c6c6f743a206e6f74207265676973746572656420766f74657200000000604482015260640161025c565b336000908152600a60209081526040808320805460ff1916600190811790915584845260099092528220600201805491929091610466908490610cac565b925050819055506001600860008282546104809190610cac565b9091555050604051819033907fa36cc2bebb74db33e9f88110a07ef56e1b31b24b4c4f51b54b1664266e29f45b90600090a36104bc6001600055565b50565b6060806060600060075490508067ffffffffffffffff8111156104e4576104e4610b48565b60405190808252806020026020018201604052801561050d578160200160208202803683370190505b5093508067ffffffffffffffff81111561052957610529610b48565b60405190808252806020026020018201604052801561055c57816020015b60608152602001906001900390816105475790505b5092508067ffffffffffffffff81111561057857610578610b48565b6040519080825280602002602001820160405280156105a1578160200160208202803683370190505b50915060005b818110156106c75760006105bc826001610cac565b60008181526009602052604090208054885192935090918890859081106105e5576105e5610cc5565b60200260200101818152505080600101805461060090610cdb565b80601f016020809104026020016040519081016040528092919081815260200182805461062c90610cdb565b80156106795780601f1061064e57610100808354040283529160200191610679565b820191906000526020600020905b81548152906001019060200180831161065c57829003601f168201915b505050505086848151811061069057610690610cc5565b602002602001018190525080600201548584815181106106b2576106b2610cc5565b602090810291909101015250506001016105a7565b5050909192565b6006805460ff191660011790556040517f62da22c1648062738addb8883c7a3f94ae072a1282f0d8e9e4deb361d3c67cd590600090a1565b6007805490600061071683610d15565b909155505060408051606081018252600754808252602080830185815260008486018190529283526009909152929020815181559151909190600182019061075e9082610d7f565b50604082015181600201559050506007547fe83b2a43e7e82d975c8a0a6d2f045153c869e111136a34d1889ab7b598e396a38260405161079e9190610c0f565b60405180910390a250565b600380546107b690610cdb565b80601f01602080910402602001604051908101604052809291908181526020018280546107e290610cdb565b801561082f5780601f106108045761010080835404028352916020019161082f565b820191906000526020600020905b81548152906001019060200180831161081257829003601f168201915b505050505081565b6060600080600754116108845760405162461bcd60e51b815260206004820152601560248201527442616c6c6f743a206e6f2063616e6469646174657360581b604482015260640161025c565b600060015b60075481116108c357600081815260096020526040902060020154828111156108b0578092505b50806108bb81610d15565b915050610889565b50600060015b600754811161090b576000818152600960205260409020600201548390036108f957816108f581610d15565b9250505b8061090381610d15565b9150506108c9565b508067ffffffffffffffff81111561092557610925610b48565b60405190808252806020026020018201604052801561094e578160200160208202803683370190505b509350600060015b60075481116109c3576000818152600960205260409020600201548490036109b157600081815260096020526040902054868361099281610d15565b9450815181106109a4576109a4610cc5565b6020026020010181815250505b806109bb81610d15565b915050610956565b50939491935090915050565b600260005403610a215760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161025c565b6002600055565b600060208284031215610a3a57600080fd5b5035919050565b60008151808452602080850194506020840160005b83811015610a7257815187529582019590820190600101610a56565b509495945050505050565b6000815180845260005b81811015610aa357602081850181015186830182015201610a87565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000610ad66060830186610a41565b6020838203818501528186518084528284019150828160051b85010183890160005b83811015610b2657601f19878403018552610b14838351610a7d565b94860194925090850190600101610af8565b50508681036040880152610b3a8189610a41565b9a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610b7057600080fd5b813567ffffffffffffffff80821115610b8857600080fd5b818401915084601f830112610b9c57600080fd5b813581811115610bae57610bae610b48565b604051601f8201601f19908116603f01168101908382118183101715610bd657610bd6610b48565b81604052828152876020848701011115610bef57600080fd5b826020860160208301376000928101602001929092525095945050505050565b602081526000610c226020830184610a7d565b9392505050565b604081526000610c3c6040830185610a41565b90508260208301529392505050565b600060208284031215610c5d57600080fd5b81356001600160a01b0381168114610c2257600080fd5b600060208284031215610c8657600080fd5b81518015158114610c2257600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610cbf57610cbf610c96565b92915050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610cef57607f821691505b602082108103610d0f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201610d2757610d27610c96565b5060010190565b601f821115610d7a576000816000526020600020601f850160051c81016020861015610d575750805b601f850160051c820191505b81811015610d7657828155600101610d63565b5050505b505050565b815167ffffffffffffffff811115610d9957610d99610b48565b610dad81610da78454610cdb565b84610d2e565b602080601f831160018114610de25760008415610dca5750858301515b600019600386901b1c1916600185901b178555610d76565b600085815260208120601f198616915b82811015610e1157888601518255948401946001909101908401610df2565b5085821015610e2f5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212208fa767df5c7d8c3aba9d08d713fcbd5717ea2a5cf5b61b0625828a03d6c1f6fc64736f6c63430008180033";

type BallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ballot__factory extends ContractFactory {
  constructor(...args: BallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registry: AddressLike,
    _electionId: BigNumberish,
    _electionName: string,
    _startTime: BigNumberish,
    _endTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _registry,
      _electionId,
      _electionName,
      _startTime,
      _endTime,
      overrides || {}
    );
  }
  override deploy(
    _registry: AddressLike,
    _electionId: BigNumberish,
    _electionName: string,
    _startTime: BigNumberish,
    _endTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _registry,
      _electionId,
      _electionName,
      _startTime,
      _endTime,
      overrides || {}
    ) as Promise<
      Ballot & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Ballot__factory {
    return super.connect(runner) as Ballot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotInterface {
    return new Interface(_abi) as BallotInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Ballot {
    return new Contract(address, _abi, runner) as unknown as Ballot;
  }
}
